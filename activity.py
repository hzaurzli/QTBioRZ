# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'activity.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import sys,os
import time
from PyQt5 import QtCore, QtGui, QtWidgets, Qt
from PyQt5.QtGui import *
from PyQt5.QtWidgets import *
from PyQt5.QtCore import *
from keras.models import load_model
from numpy import loadtxt, savetxt
import os


class Activity_Form(QWidget):
    def __init__(self):
        super().__init__()
        self.initUI()

    def initUI(self):
        self.setWindowTitle("Activity")
        self.resize(762, 624)

        self.pushButton_12 = QtWidgets.QPushButton("Choose",self)
        self.pushButton_12.setGeometry(QtCore.QRect(470, 160, 111, 51))
        font = QtGui.QFont()
        font.setPointSize(15)
        self.pushButton_12.setFont(font)
        self.pushButton_12.setObjectName("pushButton_12")
        self.pushButton_12.clicked.connect(self.read_file12)

        self.textBrowser_11 = QtWidgets.QTextBrowser(self)
        self.textBrowser_11.setGeometry(QtCore.QRect(70, 160, 331, 51))
        self.textBrowser_11.setObjectName("textBrowser_11")

        self.label_25 = QtWidgets.QLabel("Input file (Fa)",self)
        self.label_25.setGeometry(QtCore.QRect(150, 90, 181, 51))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(20)
        self.label_25.setFont(font)
        self.label_25.setObjectName("label_25")

        self.textBrowser_12 = QtWidgets.QTextBrowser(self)
        self.textBrowser_12.setGeometry(QtCore.QRect(70, 310, 331, 51))
        self.textBrowser_12.setObjectName("textBrowser_12")

        self.pushButton_13 = QtWidgets.QPushButton("Choose",self)
        self.pushButton_13.setGeometry(QtCore.QRect(470, 310, 111, 51))
        font = QtGui.QFont()
        font.setPointSize(15)
        self.pushButton_13.setFont(font)
        self.pushButton_13.setObjectName("pushButton_13")
        self.pushButton_13.clicked.connect(self.read_file13)

        self.label_26 = QtWidgets.QLabel("Activity file",self)
        self.label_26.setGeometry(QtCore.QRect(150, 250, 181, 51))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(20)
        self.label_26.setFont(font)
        self.label_26.setObjectName("label_26")

        self.textBrowser_7 = QtWidgets.QTextBrowser(self)
        self.textBrowser_7.setGeometry(QtCore.QRect(70, 440, 331, 111))
        self.textBrowser_7.setObjectName("textBrowser_7")

        self.label_27 = QtWidgets.QLabel("Status",self)
        self.label_27.setGeometry(QtCore.QRect(190, 380, 181, 51))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(20)
        self.label_27.setFont(font)
        self.label_27.setObjectName("label_27")

        self.label_28 = QtWidgets.QLabel("Peptide activity",self)
        self.label_28.setGeometry(QtCore.QRect(300, 20, 181, 51))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(20)
        self.label_28.setFont(font)
        self.label_28.setObjectName("label_28")

        self.pushButton_14 = QtWidgets.QPushButton("Run",self)
        self.pushButton_14.setGeometry(QtCore.QRect(480, 470, 81, 41))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(20)
        self.pushButton_14.setFont(font)
        self.pushButton_14.setObjectName("pushButton_14")
        self.pushButton_14.clicked.connect(self.calculation)

        ## show window
        self.show()

    def read_file12(self):
        openfile_name = QtWidgets.QFileDialog.getOpenFileName(self, 'choose file', '')[0]
        print(openfile_name)
        self.textBrowser_11.setText(openfile_name)

    def read_file13(self):
        openfile_name = QtWidgets.QFileDialog.getSaveFileName(self, "choose file", "./")[0]
        print(openfile_name)
        self.textBrowser_12.setText(openfile_name)

    def calculation(self):
        try:
            fasta = self.textBrowser_11.toPlainText()
            out = self.textBrowser_12.toPlainText()
            path = os.path.dirname(out)

            self.textBrowser_7.setText('Running! please wait')
            QApplication.processEvents()  # 逐条打印状态

            os.popen(r".\perl\bin\perl.exe .\perl\format.pl %s none > %s"
                     % (fasta, path + '/tmp.txt'))
            time.sleep(10)

            model = load_model('./models/Activity/lstm.h5')
            x = loadtxt(path + '/tmp.txt', delimiter=",")
            preds = model.predict(x)
            savetxt(path+'/tmpActivity.txt', preds, fmt="%.8f", delimiter=",")

            with open(fasta) as fa:
                fa_dict = {}
                for line in fa:
                    line = line.replace('\n', '')
                    if line.startswith('>'):
                        seq_name = line[1:]
                        fa_dict[seq_name] = ''
                    else:
                        fa_dict[seq_name] += line.replace('\n', '')
            fa.close()

            lis = []
            with open(path+'/tmpActivity.txt') as ac:
                for i in ac:
                    i = i.replace('\n', '')
                    lis.append(i)
            ac.close()

            for i_1 in range(0, len(lis)):
                key = list(fa_dict.keys())[i_1]
                val = [fa_dict.get(key, [])] + [lis[i_1]]
                fa_dict[key] = val

            with open(out, 'w') as f:
                for key in fa_dict:
                    lines = key + '\t' + fa_dict[key][0] + '\t' + fa_dict[key][1] + '\n'
                    print(lines)
                    f.write(lines)
            f.close()

            os.remove(path + '/tmp.txt')
            os.remove(path+'/tmpActivity.txt')
            self.textBrowser_7.setText('Finished!!!')

        except:
            QMessageBox.critical(self, "error", "check fasta file format!")


if __name__ == "__main__":
    import sys
    app = QApplication(sys.argv)
    mc = Activity_Form()
    mc.show()
    app.exec_()
